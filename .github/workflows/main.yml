# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on: push

env:
  NODE_VERSION: "14.x"
  DB_DATABASE: test
  DB_USER: root
  DB_PASSWORD: root
  AWS_S3_KEY_ID: ${{ secrets.AWS_S3_KEY_ID }}
  AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install eslint package
        run: npm install eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser
      - name: eslint
        run: npm run lint

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: lint

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';" -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0
        with:
          redis-version: 5
      - name: npm install
        run: |
          npm ci
      - name: testing
        run: |
          npm run test:overall --if-present
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish_docker_images:
    needs: test
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: noobj/nest-habit_node

  migrations-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE test_migration;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';" -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: npm install
        run: |
          npm install typeorm
          npm install @nestjs/bull
      - name: build
        run: |
          npm run build
      - name: migrate
        run: |
          mv .env.example .env
          npm run migrate
